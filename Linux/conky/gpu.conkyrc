conky.config = {
	background = true, 							-- forked to background
	double_buffer = true,						-- Use the Xdbe extension? (eliminates flicker)
	if_up_strictness = 'address',				-- how strict if testing interface is up - up, link or address
	no_buffers = true,							-- Subtract (file system) buffers from used memory?
	temperature_unit = 'celsius',				-- fahrenheit or celsius
	text_buffer_size = 2048,					-- size of buffer for display of content of large variables - default 256
    update_interval = 4,						-- update interval
	imlib_cache_size = 0,                       -- disable image cache to get a new spotify cover per song

	alignment = 'top_right',						
	gap_x = 330,							    -- pixels between right or left border
	gap_y = 80,									-- pixels between bottom or left border
	minimum_height = 100,						-- minimum height of window
	minimum_width = 300,						-- minimum height of window
    maximum_width = 300,

	border_width = 1, 							-- border width in pixels
    border_inner_margin = 10,
	default_bar_width = 0,					    -- default is 0 - full width
	default_bar_height = 10,					-- default is 6
	default_shade_color = '#000000',			-- default shading colour
	default_outline_color = '#000000',			-- default outline colour
	draw_borders = false,						-- draw borders around text
	draw_graph_borders = true,					-- draw borders around graphs
	draw_shades = false,						-- draw shades
	draw_outline = false,						-- draw outline

	extra_newline = false,						-- extra newline at the end
	format_human_readable = true,				-- KiB, MiB rather then number of bytes
	font = 'Inter Mono:size=10',  				-- font for complete conky unless in code defined
	max_text_width = 0,							-- 0 will make sure line does not get broken if width too small
	override_utf8_locale = true,				-- force UTF8 requires xft
	short_units = false,					    -- shorten units from KiB to k
	top_name_width = 30,						-- width for $top name value default 15
	uppercase = false,							-- uppercase or not
	use_spacer = 'none',						-- adds spaces around certain objects to align - default none
	use_xft = true,								-- xft font - anti-aliased font
	xftalpha = 1,								-- alpha of the xft font - between 0-1
    
	own_window = true,							-- create your own window to draw
	own_window_argb_value = 140,			    -- real transparency - composite manager required 0-255
	own_window_argb_visual = true,				-- use ARGB - composite manager required
	own_window_colour = '#000000',				-- set colour if own_window_transparent no
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
	own_window_transparent = false,				-- if own_window_argb_visual is true sets background opacity 0%
	own_window_title = 'conky_gpu',			    -- set the name manually  - default conky "hostname"
	own_window_type = 'normal',				    -- if own_window true options are: normal/override/dock/desktop/panel

	default_color = '#D9DDE2',  				-- default color and border color
	color1 = '#FF0000',
	color2 = '#597AA1',
	color3 = '#cccccc',
	color4 = '#D9BC83',
	color5 = '#00BFFF',
	color6 = '#FFFFFF',
};

conky.text = [[
${color5}${font Roboto:size=10}G P U   ${hr 2}${font}
${color2}Name: ${color}${alignr}${exec lspci | grep VGA | awk -F ']: ' '/Intel/ {sub(/.*Intel Corporation /, ""); print $0}'}
${color2}Freq: ${color}${alignr}${execi 10 cat /sys/class/drm/card1/gt_cur_freq_mhz} MHz
${execigraph 6 "cat /sys/class/drm/card1/gt_cur_freq_mhz | sed 's/$/\/1050/' | bc -l | sed 's/$/*100/' | bc | cut -c 1-2" 20,300}

${color2}Name: ${color}${alignr}${exec nvidia-smi --query-supported-clocks=gpu_name --format=csv,noheader}
${color2}Driver: ${color}${alignr}${exec nvidia-smi --query-gpu=driver_version --format=csv,noheader}
${color2}Temp: ${color}${alignr}${execi 10 nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader} Â°C
${color2}Fan Speed: ${color}${alignr}${execi 10 nvidia-smi --query-gpu=fan.speed --format=csv,noheader}
${color2}Power: ${color}${alignr}${execi 10 nvidia-smi --query-gpu=power.draw --format=csv,noheader}
${color2}Mem Used: ${color}${alignr}${execi 10 nvidia-settings -q [gpu:0]/UsedDedicatedGPUMemory -t} / ${exec nvidia-settings -q [gpu:0]/TotalDedicatedGPUMemory -t} MiB${voffset 8}
${color2}GPU Usage: ${color}${alignr}${execi 10 nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader}
${execigraph 6 "nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader | cut -c 1-2" 20,300}${voffset 10}
${color2}VRAM Usage: ${color}${alignr}${execi 10 nvidia-smi --query-gpu=utilization.memory --format=csv,noheader}
${execigraph 6 "nvidia-smi --query-gpu=utilization.memory --format=csv,noheader | cut -c 1-2"  20,300}${voffset 10}
${color2}GPU Freq: ${color}${alignr}${execi 10 nvidia-smi --query-gpu=clocks.sm --format=csv,noheader}
${execigraph 6 "nvidia-smi --query-gpu=clocks.sm --format=csv,noheader | cut -d ' ' -f 1 | sed 's/$/\/2100/' | bc -l | sed 's/$/*100/' | bc | cut -d '.' -f1" 20,300}${voffset 10}
${color2}VRAM Freq: ${color}${alignr}${execi 10 nvidia-smi --query-gpu=clocks.current.memory --format=csv,noheader}
${execigraph 6 "nvidia-smi --query-gpu=clocks.mem --format=csv,noheader | cut -d ' ' -f 1 | sed 's/$/\/6000/' | bc -l | sed 's/$/*100/' | bc | cut -d '.' -f1"  20,300}${voffset 10}
]];
